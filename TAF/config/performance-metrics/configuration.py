import os

SECURITY_SERVICE_NEEDED=os.getenv("SECURITY_SERVICE_NEEDED")
COMPOSE_IMAGE=os.getenv("COMPOSE_IMAGE")
ARCH=os.getenv("ARCH")

# Service Port
if SECURITY_SERVICE_NEEDED == 'true':
    DEVICE_REST_PORT = "8443/device-rest"
    DEVICE_VIRTUAL_PORT = "8443/device-virtual"
    APP_SERVICE_RULES_PORT = "8443/app-rules-engine"
else:
    DEVICE_REST_PORT = 59986
    DEVICE_VIRTUAL_PORT = 59900
    APP_SERVICE_RULES_PORT = 59701


# Suite: 1_resource_usage
# Prior release (NAPA) image size (MB) for x86
CONSUL_IMAGE = 193.68
DATA_IMAGE = 27.98
METADATA_IMAGE = 28.35
COMMAND_IMAGE = 27.80
NOTIFICATIONS_IMAGE = 41.63
SCHEDULER_IMAGE = 40.79
COMMON_CONFIG_IMAGE = 24.89
APP_SERVICE_CONFIGURABLE_IMAGE = 41.45
DEVICE_VIRTUAL_IMAGE = 40.76
DEVICE_REST_IMAGE = 40.75
KUIPER_IMAGE = 68.47
REDIS_IMAGE = 35.90
PROXY_IMAGE = 36.03
SECRETSTORE_IMAGE = 51.32
NGINX_IMAGE = 16.96
VAULT_IMAGE = 381.43
BOOTSTRAPPER_IMAGE = 29.97
SPIFFE_TOKEN_IMAGE = 42.03
SPIRE_AGENT_IMAGE = 167.23
SPIRE_CONFIG_IMAGE = 108.12
SPIRE_SERVER_IMAGE = 108.87

# Prior release (NAPA) binary size (MB) for x86
CONSUL_BINARY = 0
DATA_BINARY = 13.91
METADATA_BINARY = 14.28
COMMAND_BINARY = 13.72
NOTIFICATIONS_BINARY = 26.83
SCHEDULER_BINARY = 26.72
COMMON_CONFIG_BINARY = 10.81
APP_SERVICE_CONFIGURABLE_BINARY = 26.63
DEVICE_VIRTUAL_BINARY = 26.66
DEVICE_REST_BINARY = 26.66
KUIPER_BINARY = 0
REDIS_BINARY = 0
PROXY_BINARY = 0
SECRETSTORE_BINARY = 0
NGINX_BINARY = 0
VAULT_BINARY = 0
BOOTSTRAPPER_BINARY = 0
SPIFFE_TOKEN_BINARY = 0
SPIRE_AGENT_BINARY = 0
SPIRE_CONFIG_BINARY = 0
SPIRE_SERVER_BINARY = 0

# Prior release (NAPA) image size (MB) for arm64
CONSUL_IMAGE_ARM64 = 197.33
DATA_IMAGE_ARM64 = 27.99
METADATA_IMAGE_ARM64 = 28.33
COMMAND_IMAGE_ARM64 = 27.80
NOTIFICATIONS_IMAGE_ARM64 = 41.37
SCHEDULER_IMAGE_ARM64 = 40.45
COMMON_CONFIG_IMAGE_ARM64 = 25.06
APP_SERVICE_CONFIGURABLE_IMAGE_ARM64 = 41.23
DEVICE_VIRTUAL_IMAGE_ARM64 = 40.39
DEVICE_REST_IMAGE_ARM64 = 40.37
KUIPER_IMAGE_ARM64 = 65.63
REDIS_IMAGE_ARM64 = 36.13
PROXY_IMAGE_ARM64 = 35.95
SECRETSTORE_IMAGE_ARM64 = 50.70
NGINX_IMAGE_ARM64 = 17.37
VAULT_IMAGE_ARM64 = 367.90
BOOTSTRAPPER_IMAGE_ARM64 = 29.91
SPIFFE_TOKEN_IMAGE_ARM64 = 42.32
SPIRE_AGENT_IMAGE_ARM64 = 158.96
SPIRE_CONFIG_IMAGE_ARM64 = 102.55
SPIRE_SERVER_IMAGE_ARM64 = 103.44

# Prior release (NAPA) binary size (MB) for arm64
DATA_BINARY_ARM64 = 13.36
METADATA_BINARY_ARM64 =	13.70
COMMAND_BINARY_ARM64 = 13.17
NOTIFICATIONS_BINARY_ARM64 = 25.91
SCHEDULER_BINARY_ARM64 = 25.82
COMMON_CONFIG_BINARY_ARM64 = 10.42
APP_SERVICE_CONFIGURABLE_BINARY_ARM64 = 25.75
DEVICE_VIRTUAL_BINARY_ARM64 = 25.73
DEVICE_REST_BINARY_ARM64 = 25.73

# Footprint threshold value
# ex. 1.5 = prior release + 50%
FOOTPRINT_THRESHOLD = 3

# Suite: 2_service_startup_time
# Retry setting to fetch service startup time
WAIT_TIME = 5
RETRY_TIMES = 5

# Startup time threshold value (in seconds)
STARTUP_TIME_THRESHOLD = 300

# Loop time for retrieving services startup time
STARTUP_TIME_LOOP_TIMES = 5


# Suite: 3_resource_usage_with_autoevent
# CPU threshold value (percentage)
CPU_USAGE_THRESHOLD = 50

# Memory threshold value (in MB)
MEM_USAGE_THRESHOLD = 300

# Loop time for retrieving CPU and Memory
GET_CPU_MEM_LOOP_TIMES = 10

# Interval time for retrieving CPU and Memory (in seconds)
GET_CPU_MEM_INTERVAL = 7


# Suite: 4_ping_response_time
# Loop time for sending ping request
PING_RES_LOOP_TIMES = 100

# Ping response time threshold value (in milliseconds)
if ARCH == "arm64":
    PING_RES_THRESHOLD = 400
else:
    PING_RES_THRESHOLD = 100


# Allow the failure times for ping response time over than threshold setting
ALLOWABLE_OUTLIER = 5


# Suite: 5_event_exported_time
# Loop time for retrieve mqtt events
EXPORTED_LOOP_TIMES = 10

# Export time threshold value (in milliseconds)
EXPORT_TIME_THRESHOLD = 1200

# Subscriber Wait Duration (in seconds)
SUBSCIBE_DURATION = 180
